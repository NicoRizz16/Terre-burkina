<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * LetterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LetterRepository extends \Doctrine\ORM\EntityRepository
{
    public function getLetters($page, $nbPerPage)
    {
        $query = $this->createQueryBuilder('l')
            ->orderBy('l.creationDate', 'DESC')
            ->getQuery()
        ;

        $query
            ->setFirstResult(($page-1)*$nbPerPage)
            ->setMaxResults($nbPerPage)
        ;

        return new Paginator($query, true);
    }

    public function getPreviousLetter(\DateTime $date)
    {
        $query = $this->createQueryBuilder('l')
            ->where('l.creationDate < :date')
            ->setParameter('date', $date)
            ->andWhere('l.isPublished = true')
            ->orderBy('l.creationDate', 'DESC')
            ->setFirstResult(0)
            ->setMaxResults(1)
        ;

        return $query->getQuery()->getOneOrNullResult();
    }

    public function getNextLetter(\DateTime $date)
    {
        $query = $this->createQueryBuilder('l')
            ->where('l.creationDate > :date')
            ->setParameter('date', $date)
            ->andWhere('l.isPublished = true')
            ->orderBy('l.creationDate', 'ASC')
            ->setFirstResult(0)
            ->setMaxResults(1)
        ;

        return $query->getQuery()->getOneOrNullResult();
    }

    public function getLastLetter()
    {
        $query = $this->createQueryBuilder('l')
            ->andWhere('l.isPublished = true')
            ->orderBy('l.creationDate', 'DESC')
            ->setFirstResult(0)
            ->setMaxResults(1)
        ;

        return $query->getQuery()->getOneOrNullResult();
    }
}
